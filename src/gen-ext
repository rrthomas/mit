#!/usr/bin/env python3
# Generate code for extra instructions.
#
# (c) SMite authors 1994-2019
#
# The package is distributed under the MIT/X11 License.
#
# THIS PROGRAM IS PROVIDED AS IS, WITH NO WARRANTY. USE IS AT THE USERâ€™S
# RISK.

from smite_core.ext import *
from smite_core.instruction_gen import *

# Write the output file

print('''
// Auto-generated by gen-extra - DO NOT EDIT.
''')

print(includes)

print('''
#include "ext-opcodes.h"

enum {
    SMITE_ERR_EXT_INVALID_LIBRARY = 16,
    SMITE_ERR_EXT_INVALID_FUNCTION = 17,
};

#define RAISE(code)                         \\
    return (code);                          \\

// Assumption for file functions
verify(sizeof(int) <= sizeof(smite_WORD));
''')

for lib in LibInstructions:
    print('''\
static int extra_{}(smite_state *S, smite_WORD opcode)
{{'''.format(str.lower(lib.name)))
    print(dispatch(lib.value.library, '{}_'.format(lib.name), '            RAISE(SMITE_ERR_EXT_INVALID_FUNCTION);'))
    print('''
    return SMITE_ERR_OK;
}
''')

print('''
int smite_ext(smite_state *S)
{
    smite_WORD opcode;
    {
        int ret = pop_stack(S, &opcode);
        if (ret != 0)
            RAISE(ret);
    }
''')

print(dispatch(LibInstructions, '', '''
            return SMITE_ERR_EXT_INVALID_LIBRARY;'''))

print('''
    return SMITE_ERR_OK;
}''')
