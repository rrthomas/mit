# bootstrap.conf (smite) version 2019-03-31

# (c) SMite authors 1995-2019
#
# The package is distributed under the MIT/X11 License.
#
# THIS PROGRAM IS PROVIDED AS IS, WITH NO WARRANTY. USE IS AT THE USERâ€™S
# RISK.

## -------------- ##
## Configuration. ##
## -------------- ##

# File that should exist relative to the top directory of a checked out
# hierarchy, but not in a distribution tarball.
checkout_only_file=.gitignore

# List of programs, minimum versions, and software urls required to
# bootstrap, maintain and release.

# Build prerequisites
buildreq='
        git        1.5.5   https://git-scm.com
        perl       5.5     https://perl.com
        tar        -       https://www.gnu.org/s/tar
'

# Non-default gnulib directory options.
local_gl_path=gl-mod/bootstrap
gnulib_git_submodules='
        gl-mod/bootstrap
        doc/bibtex
'

# Version of gnulib to check out.
gnulib_clone_since=2018-08-18

# Additional gnulib-tool options to use.
gnulib_tool_options='
'

# gnulib modules used by this package.
gnulib_modules='
        binary-io
        bootstrap
        fcntl
        fdatasync
        getopt-gnu
        getpagesize
        largefile
        manywarnings
        progname
        stdlib
        ssize_t
        strings
        sys_stat
        sys_types
        unistd
        verify
        xvasprintf
'

## --------------- ##
## Hook functions. ##
## --------------- ##

# smite_ignore_gnulib_ignore
# ----------------------------
# gnulib-tool updates m4/.gitignore and lib/.gitignore, and keeping
# generated files under version control does not make sense.  Since
# lib is entirely ignored, we only need to prepopulate the m4 ignore
# files with generated files not tracked by gnulib-tool.
smite_ignore_gnulib_ignore ()
{
    $debug_cmd

    $require_macro_dir

    if test -f "$macro_dir/.gitignore" ; then
      :
    else
      func_verbose "creating initial \`$macro_dir/.gitignore'"
      cat > $macro_dir/.gitignore <<\EOF
# files created by bootstrap, but that gnulib doesn't track
*~
/.gitignore
/gnulib-comp.m4
EOF
    fi
}
func_add_hook func_prep smite_ignore_gnulib_ignore


# Local variables:
# mode: shell-script
# sh-indentation: 2
# eval: (add-hook 'write-file-functions 'time-stamp)
# time-stamp-start: "# bootstrap.conf (smite) version "
# time-stamp-format: "%:y-%02m-%02d"
# time-stamp-end: "$"
# End:
